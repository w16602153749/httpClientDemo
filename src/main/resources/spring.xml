<?xml version="1.0" encoding="UTF-8"?>
<beans xmlns="http://www.springframework.org/schema/beans"
  xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xmlns:p="http://www.springframework.org/schema/p"
  xmlns:context="http://www.springframework.org/schema/context"
  xmlns:mvc="http://www.springframework.org/schema/mvc"
  xsi:schemaLocation="http://www.springframework.org/schema/beans  
                        http://www.springframework.org/schema/beans/spring-beans-4.3.xsd  
                        http://www.springframework.org/schema/context  
                        http://www.springframework.org/schema/context/spring-context-4.3.xsd  
                        http://www.springframework.org/schema/mvc  
                        http://www.springframework.org/schema/mvc/spring-mvc-4.3.xsd">
                        
  <!-- 自动扫描 -->
  <context:component-scan base-package="cn.ac.wts" />
  <!--     解决返回SpringMvc后台向前台页面返回String类型时乱码 -->
  <mvc:annotation-driven>
  			 <!--设置不使用默认的消息转换器
  			 如果不设置register-default='false'Spring 会默认帮我们注册貌似7个messageConvert 
  			 -->
		    <mvc:message-converters register-defaults="false">  
		        <bean class="org.springframework.http.converter.StringHttpMessageConverter">  
		             <property name="supportedMediaTypes">    
		                <list>    
		                    <value>text/plain;charset=UTF-8</value>    
		                    <value>text/html;charset=UTF-8</value> 
		                    <value>application/json;charset=UTF-8</value>    
		                </list>    
		            </property>    
		        </bean>  
		         
		        <bean class="org.springframework.http.converter.support.AllEncompassingFormHttpMessageConverter" />

       		    <bean class="org.springframework.http.converter.ByteArrayHttpMessageConverter" />

 				<bean class="org.springframework.http.converter.ResourceHttpMessageConverter" />
 
        		<bean class="org.springframework.http.converter.BufferedImageHttpMessageConverter" />

		        <!--配置fastjson中实现HttpMessageConverter接口的转换器
		        	默认转换器是Jackson
		        -->
		        <bean class="com.alibaba.fastjson.support.spring.FastJsonHttpMessageConverter4" >
		            <!--加入支持的媒体类型，返回contentType-->
		            <property name="supportedMediaTypes">
		                <list>
		                    <!--这里顺序不能反，一定要先写text/html，不然IE下会出现下载提示-->
		                    <value>text/html;charset=UTF-8</value>
		                    <value>application/json;charset=UTF-8</value>
		                </list>
		            </property>
		        </bean>
		    </mvc:message-converters>  
	
	</mvc:annotation-driven>
	 
	<!-- springmvc进行/通配时处理静态文件 -->
    <mvc:default-servlet-handler/>
    
  <!-- 引入配置文件 -->
  <bean id="propertyConfigurer" class="org.springframework.beans.factory.config.PropertyPlaceholderConfigurer">
    <property name="locations">
        <list>
            <value>classpath:config.properties</value>
        </list>
    </property>
  </bean>
  
   <!-- SpringMVC上传文件时，需要配置MultipartResolver处理器-->
  <bean id="multipartResolver" class="org.springframework.web.multipart.commons.CommonsMultipartResolver">  
        <!-- 默认编码 -->
        <property name="defaultEncoding" value="utf-8" />  
        <!-- 设定文件大小最大值为10MB，10*1024*1024 -->
        <property name="maxUploadSize" value="1048576" />  
        <!-- 设定文件上传时写入内存的最大值，如果小于这个参数不会生成临时文件，默认为10240 -->
        <property name="maxInMemorySize" value="40960" />  
         <!-- 上传文件的临时路径 -->
	    <property name="uploadTempDir" value="fileUpload/temp"></property>
	    <!-- 延迟文件解析 -->
	    <property name="resolveLazily" value="true"/>
    </bean> 

</beans>